#!/bin/bash

set -e

bold=$(tput bold)
normal=$(tput sgr0)

SERVER=$1

if [[ $# -eq 0 ]] || [[ ! "$SERVER" =~ ^(stage|prod)$ ]]; then
    echo ""
    echo "ARGUMENT ERROR: Specify whether to deploy to 'stage' or 'prod'."
    echo ""
    exit 1
fi

DOMAIN="capitolunited.org"
if [[ "$SERVER" == "stage" ]]; then
    DOMAIN="stage.$DOMAIN"
fi

echo ""
echo "${bold}Running tests...${normal}"
echo ""
./test

echo ""
echo "${bold}Tests passed.${normal}"

if [[ "$SERVER" == "prod" ]]; then
    read -p "${bold}Enter 'Yes' to deploy to prod:${normal} " -r
    if [[ $REPLY != "Yes" ]]; then
        echo ""
        echo "${bold}Canceled production deployment.${normal}"
        echo ""
        exit 1
    fi
fi

if [[ "$SERVER" == "prod" ]]; then
    echo ""
    echo "${bold}Backing up database...${normal}"
    echo ""
    ssh ubuntu@$DOMAIN /bin/bash \
        sudo -u capu pg_dump | aws s3 cp - s3://capu-backups/$(date +\%s)-deploy
fi

echo ""
echo "${bold}Transfering files...${normal}"
echo ""
rsync -rzlIpvh --exclude venv --delete \
    capu infra/packer/files/$SERVER/{settings.py,secret_key.txt} \
    ubuntu@$DOMAIN:/home/ubuntu

echo ""
echo "${bold}Installing app...${normal}"
echo ""
ssh ubuntu@$DOMAIN /bin/bash <<EOF
    set -e
    sudo chown -R capu:capu settings.py secret_key.txt capu
    sudo rsync -aI --delete --delete capu/ /home/capu/
    sudo mv secret_key.txt /home/capu
    sudo mv settings.py /home/capu/capu
    sudo rm -rf capu
    sudo -u capu python3 /home/capu/manage.py check --deploy --fail-level WARNING
    sudo -u capu python3 /home/capu/manage.py migrate
    sudo -u capu python3 /home/capu/manage.py collectstatic --no-input
    sudo systemctl restart gunicorn
EOF

echo ""
echo "${bold}Done.${normal}"
echo ""
